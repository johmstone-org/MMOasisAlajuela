@model ET.MusicSheets

@{
    ViewBag.Title = "Agregar Partitura";
}

<h2>@ViewBag.Title - @ViewBag.SongName </h2>

@using (Html.BeginForm("CreatebySong", "MusicSheets", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="12u$">
            @Html.LabelFor(model => model.MSTypeID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="select-wrapper">
                @Html.DropDownListFor(model => model.MSTypeID, new SelectList(Model.MSTypeList, "MSTypeID","MSTypeName"),new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MSTypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="12u$">
            @Html.LabelFor(model => model.SongID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="select-wrapper">
                @Html.DropDownListFor(model => model.SongID, new SelectList(Model.SongList, "SongID","SongName"), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SongID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Version, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Version, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Version, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="12u$">
            @Html.LabelFor(model => model.InstrumentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="select-wrapper">
                @Html.DropDownListFor(model => model.InstrumentID, new SelectList(Model.InstrumentList, "InstrumentID","Instrument"), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.InstrumentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="12u$">
            @Html.LabelFor(model => model.Tonality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="select-wrapper">
                @Html.DropDownListFor(model => model.Tonality, new SelectList(Model.Tonalities().ToList()), new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tonality, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.files, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.files, "", new { @type = "file", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.files, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
                <input type="button" value="Cancelar" class="btn btn-default" onclick="javascript: window.close();" />
            </div>
        </div>
    </div>
}

